/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "projectkuryr/kuryr/pkg/apis/openstack/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KuryrPortLister helps list KuryrPorts.
// All objects returned here must be treated as read-only.
type KuryrPortLister interface {
	// List lists all KuryrPorts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KuryrPort, err error)
	// KuryrPorts returns an object that can list and get KuryrPorts.
	KuryrPorts(namespace string) KuryrPortNamespaceLister
	KuryrPortListerExpansion
}

// kuryrPortLister implements the KuryrPortLister interface.
type kuryrPortLister struct {
	indexer cache.Indexer
}

// NewKuryrPortLister returns a new KuryrPortLister.
func NewKuryrPortLister(indexer cache.Indexer) KuryrPortLister {
	return &kuryrPortLister{indexer: indexer}
}

// List lists all KuryrPorts in the indexer.
func (s *kuryrPortLister) List(selector labels.Selector) (ret []*v1alpha1.KuryrPort, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KuryrPort))
	})
	return ret, err
}

// KuryrPorts returns an object that can list and get KuryrPorts.
func (s *kuryrPortLister) KuryrPorts(namespace string) KuryrPortNamespaceLister {
	return kuryrPortNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KuryrPortNamespaceLister helps list and get KuryrPorts.
// All objects returned here must be treated as read-only.
type KuryrPortNamespaceLister interface {
	// List lists all KuryrPorts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KuryrPort, err error)
	// Get retrieves the KuryrPort from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KuryrPort, error)
	KuryrPortNamespaceListerExpansion
}

// kuryrPortNamespaceLister implements the KuryrPortNamespaceLister
// interface.
type kuryrPortNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KuryrPorts in the indexer for a given namespace.
func (s kuryrPortNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KuryrPort, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KuryrPort))
	})
	return ret, err
}

// Get retrieves the KuryrPort from the indexer for a given namespace and name.
func (s kuryrPortNamespaceLister) Get(name string) (*v1alpha1.KuryrPort, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kuryrport"), name)
	}
	return obj.(*v1alpha1.KuryrPort), nil
}
